[package]
name = "qenex-os"
version = "0.1.0"
edition = "2021"
authors = ["QENEX Team"]
description = "QENEX Financial Operating System"

# Multiple binary targets for different components
[[bin]]
name = "qenex-kernel"
path = "src/kernel/main.rs"
required-features = ["kernel"]

[[bin]]
name = "qenex-userspace"
path = "src/userspace/main.rs"
required-features = ["userspace"]

[[bin]]
name = "qenex-api-server"
path = "src/api/server.rs"
required-features = ["userspace", "networking"]

[lib]
name = "qenex_os"
path = "src/lib.rs"

# Feature flags to control what gets compiled
[features]
default = ["userspace", "networking", "database"]

# Core features
kernel = ["spin", "linked_list_allocator", "bootloader", "x86_64"]
userspace = ["tokio", "serde", "chrono", "uuid", "tracing"]

# Optional features
networking = ["axum", "hyper", "tower"]
database = ["sqlx", "redis"]
crypto = ["ring", "rustls", "sha2"]
ai = ["candle-core", "candle-nn"]
consensus = ["libp2p"]

# Development features
testing = ["tokio-test", "mockall"]
benchmarks = ["criterion"]

# Core dependencies (always available)
[dependencies]
serde = { version = "1.0", features = ["derive"] }
thiserror = "1.0"
tracing = "0.1"

# Kernel-only dependencies (no_std)
spin = { version = "0.9", optional = true }
linked_list_allocator = { version = "0.10", optional = true }
bootloader = { version = "0.9", optional = true }
x86_64 = { version = "0.14", optional = true }

# Userspace dependencies (std)
tokio = { version = "1.0", features = ["full"], optional = true }
chrono = { version = "0.4", features = ["serde"], optional = true }
uuid = { version = "1.0", features = ["v4", "serde"], optional = true }

# Networking dependencies
axum = { version = "0.7", optional = true }
hyper = { version = "1.0", optional = true }
tower = { version = "0.4", optional = true }

# Database dependencies
sqlx = { version = "0.7", features = ["postgres", "runtime-tokio-rustls", "chrono", "uuid", "decimal"], optional = true }
redis = { version = "0.24", features = ["tokio-comp"], optional = true }

# Financial/Decimal calculations
rust_decimal = { version = "1.30", features = ["serde"] }
rust_decimal_macros = "1.30"

# Crypto dependencies
ring = { version = "0.17", optional = true }
rustls = { version = "0.21", optional = true }
sha2 = { version = "0.10", optional = true }

# AI/ML dependencies
candle-core = { version = "0.3", optional = true }
candle-nn = { version = "0.3", optional = true }

# P2P/Consensus dependencies
libp2p = { version = "0.53", optional = true }

# Development dependencies
[dev-dependencies]
tokio-test = { version = "0.4", optional = true }
mockall = { version = "0.12", optional = true }
criterion = { version = "0.5", optional = true }

# Platform-specific configurations
[target.'cfg(target_arch = "x86_64")'.dependencies]
x86_64 = { version = "0.14", optional = true }

[target.'cfg(unix)'.dependencies]
nix = { version = "0.28", optional = true }

# Build configurations
[profile.dev]
opt-level = 0
debug = true

[profile.release]
opt-level = 3
debug = false
lto = true
codegen-units = 1

[profile.kernel]
inherits = "release"
panic = "abort"
opt-level = "s"  # Optimize for size in kernel

# Workspace configuration if you want multiple crates
[workspace]
members = [
    "crates/qenex-core",
    "crates/qenex-kernel",
    "crates/qenex-crypto",
    "crates/qenex-consensus",
    "crates/qenex-api"
]