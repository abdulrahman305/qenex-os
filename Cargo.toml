[package]
name = "qenex-os"
version = "0.1.0"
edition = "2021"
description = "QENEX Financial Operating System - Production Banking Infrastructure"
authors = ["QENEX Team"]
license = "MIT OR Apache-2.0"
repository = "https://github.com/abdulrahman305/qenex-os"

[dependencies]
# Bare metal kernel dependencies (conditional)
uefi = { version = "0.27", optional = true }
uefi-services = { version = "0.20", optional = true }
x86_64 = { version = "0.14", optional = true }
bootloader = { version = "0.9", optional = true }
linked_list_allocator = { version = "0.10", optional = true }
spin = { version = "0.9", optional = true }

# Async runtime (std only)
tokio = { version = "1.35", features = ["full"], optional = true }
tokio-util = { version = "0.7", optional = true }

# Serialization (core and std versions)
serde = { version = "1.0", features = ["derive"], default-features = false, optional = true }
serde_json = { version = "1.0", optional = true }
bincode = { version = "1.3", optional = true }

# Cryptography (core and std versions)
sha2 = { version = "0.10", default-features = false }
rand = { version = "0.8", default-features = false, optional = true }
rand_core = { version = "0.6", default-features = false }
zeroize = { version = "1.7", features = ["derive"], default-features = false }

# Post-quantum cryptography for banking
pqcrypto-dilithium = { version = "0.5", optional = true }
pqcrypto-kyber = { version = "0.7", optional = true }
pqcrypto-sphincsplus = { version = "0.7", optional = true }

# Hardware Security Module interface
pkcs11 = { version = "0.8", optional = true }

# Database (std only)
sqlx = { version = "0.7", features = ["runtime-tokio-rustls", "postgres", "uuid", "chrono", "decimal"], optional = true }
redis = { version = "0.24", features = ["tokio-comp"], optional = true }

# Networking (std only)
reqwest = { version = "0.11", features = ["json", "rustls-tls"], optional = true }
hyper = { version = "0.14", features = ["full"], optional = true }
tonic = { version = "0.10", optional = true }
prost = { version = "0.12", optional = true }

# Utilities
uuid = { version = "1.6", features = ["v4"], default-features = false, optional = true }
chrono = { version = "0.4", default-features = false, optional = true }
rust_decimal = { version = "1.33", default-features = false, optional = true }
thiserror = { version = "1.0", optional = true }
anyhow = { version = "1.0", optional = true }

# Logging and monitoring (std only)
tracing = { version = "0.1", optional = true }
tracing-subscriber = { version = "0.3", features = ["env-filter"], optional = true }
metrics = { version = "0.22", optional = true }
metrics-exporter-prometheus = { version = "0.13", optional = true }

# Configuration (std only)
config = { version = "0.13", optional = true }
clap = { version = "4.4", features = ["derive"], optional = true }

# Testing (std only)
mockall = { version = "0.12", optional = true }

# Machine Learning (std only)
candle-core = { version = "0.3", optional = true }
candle-nn = { version = "0.3", optional = true }
ndarray = { version = "0.15", optional = true }

# Additional async utilities (std only)
futures = { version = "0.3", optional = true }

[dev-dependencies]
tempfile = "3.8"
criterion = "0.5"

[[bin]]
name = "qenex-node"
path = "src/bin/node.rs"

[[bin]]
name = "qenex-cli"
path = "src/bin/cli.rs"

[features]
default = ["std", "banking-full"]

# Core feature sets
std = [
    "tokio", "tokio-util", "serde/std", "serde_json", "bincode",
    "rand/std", "uuid/std", "chrono/std", "rust_decimal/std",
    "thiserror", "anyhow", "tracing", "tracing-subscriber",
    "config", "clap", "mockall", "futures"
]

bare-metal = [
    "uefi", "uefi-services", "x86_64", "bootloader",
    "linked_list_allocator", "spin"
]

# Banking features
banking-full = ["banking-crypto", "banking-db", "banking-network", "banking-ml"]
banking-crypto = ["pqcrypto-dilithium", "pqcrypto-kyber", "pqcrypto-sphincsplus", "pkcs11"]
banking-db = ["sqlx", "redis", "postgres"]
banking-network = ["reqwest", "hyper", "tonic", "prost"]
banking-ml = ["candle-core", "candle-nn", "ndarray"]
banking-monitoring = ["metrics", "metrics-exporter-prometheus"]

# Database backends
postgres = ["sqlx/postgres"]
mysql = ["sqlx/mysql"]
sqlite = ["sqlx/sqlite"]
redis = ["dep:redis"]

# Security levels
security-max = ["banking-crypto", "pkcs11"]
quantum-safe = ["pqcrypto-dilithium", "pqcrypto-kyber", "pqcrypto-sphincsplus"]

# Platform targets
kernel = ["bare-metal"]
userspace = ["std", "banking-full"]

[profile.release]
lto = true
codegen-units = 1
panic = "abort"

[profile.bench]
debug = true